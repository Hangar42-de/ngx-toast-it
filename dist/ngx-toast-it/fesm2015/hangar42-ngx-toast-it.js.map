{"version":3,"file":"hangar42-ngx-toast-it.js","sources":["ng://@hangar42/ngx-toast-it/lib/toast.model.ts","ng://@hangar42/ngx-toast-it/lib/toast-it.service.ts","ng://@hangar42/ngx-toast-it/lib/toast-container/toast-container.component.ts","ng://@hangar42/ngx-toast-it/lib/toast/toast.component.ts","ng://@hangar42/ngx-toast-it/lib/general/component-injector.service.ts","ng://@hangar42/ngx-toast-it/lib/progress-bar/progress-bar.component.ts","ng://@hangar42/ngx-toast-it/lib/toast-it.module.ts"],"sourcesContent":["export enum ToastType {\n  success = 'toast--success',\n  warning = 'toast--warning',\n  error = 'toast--error',\n  info = 'toast--info'\n}\n\nexport enum ToastPosition {\n  topLeft = 'top-left',\n  topRight = 'top-right',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right'\n}\n\nexport class ToastConfig {\n  position ? = ToastPosition.topRight;\n  groupingThreshold ? = 5;\n  progressBarEnabled ? = true;\n\n  constructor(config = {}) {\n    Object.assign(this, config);\n  }\n}\n\nexport class Toast {\n\n  type: ToastType;\n  heading: string;\n  subheading ? = '';\n  message: string;\n  timeout ? = 5;\n\n  constructor(toast) {\n    Object.assign(this, toast);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Toast, ToastConfig} from './toast.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastItService {\n\n  public activeToasts$ = new Subject<Toast>();\n  public activeConfig$ = new Subject<ToastConfig>();\n\n  constructor() {\n  }\n\n  public setConfig(config: ToastConfig) {\n    this.activeConfig$.next(new ToastConfig(config));\n  }\n\n  public createToast(toast: Toast) {\n    const newToast = new Toast(toast);\n    this.activeToasts$.next(newToast);\n  }\n\n  public deleteToast(id: number) {\n  }\n\n  public resetToasts() {\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ToastItService} from '../toast-it.service';\nimport {BehaviorSubject, from, Observable} from 'rxjs';\nimport {Toast, ToastConfig} from '../toast.model';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {filter, take, toArray} from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-toast-container',\n  templateUrl: './toast-container.component.html',\n  styleUrls: ['./toast-container.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('void', style({opacity: 0})),\n      transition('void <=> *', animate(250)),\n    ]),\n  ]\n})\nexport class ToastContainerComponent implements OnInit {\n\n  private activeToasts$ = new BehaviorSubject<Toast[]>([]);\n  private toastCountStream$ = new BehaviorSubject<number>(0);\n\n  public config = new ToastConfig();\n  public toasts$: Observable<Toast[]>;\n  public toastCount$ = this.toastCountStream$.pipe(filter(count => count > 0));\n\n  constructor(private toastService: ToastItService) {\n  }\n\n  ngOnInit() {\n    this.toastService.activeConfig$.subscribe(config => this.setConfig(config));\n    this.toastService.activeToasts$.subscribe(toast => this.insertNewToast(toast));\n    this.activeToasts$.subscribe(toasts => this.handleIncomingToast(toasts));\n  }\n\n  public destroy(index) {\n    const newValue = this.activeToasts$.getValue();\n    newValue.splice(index, 1);\n    this.activeToasts$.next(newValue);\n  }\n\n  private insertNewToast(toast) {\n    const newValue = this.activeToasts$.getValue();\n    newValue.push(toast);\n    this.activeToasts$.next(newValue);\n  }\n\n  private handleIncomingToast(toasts: Toast[]) {\n    const {groupingThreshold} = this.config;\n    this.toasts$ = from(toasts).pipe(take(groupingThreshold), toArray());\n    this.toastCountStream$.next(toasts.length - groupingThreshold);\n  }\n\n  private setConfig(config: ToastConfig) {\n    setTimeout(() => this.config = config, 0);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Toast, ToastConfig} from '../toast.model';\nimport {faCheckCircle} from '@fortawesome/free-solid-svg-icons/faCheckCircle';\nimport {faExclamationCircle} from '@fortawesome/free-solid-svg-icons/faExclamationCircle';\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport {faInfoCircle} from '@fortawesome/free-solid-svg-icons/faInfoCircle';\n\n\nconst FACTOR_SECONDS_TO_MS = 1000;\n\n@Component({\n  selector: 'lib-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent implements OnInit {\n\n  public style = {};\n  @Input() public toast: Toast;\n  @Input() public config: ToastConfig;\n  @Input() public toastCount: number;\n  @Output() public destroyEmitter = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.startTimer();\n  }\n\n  public getIconByType() {\n    switch (this.toast.type) {\n      case 'toast--success':\n        return faCheckCircle;\n      case 'toast--info':\n        return faInfoCircle;\n      case 'toast--warning':\n        return faExclamationTriangle;\n      case 'toast--error':\n        return faExclamationCircle;\n    }\n  }\n\n  public destroy = () => this.destroyEmitter.next();\n\n  private startTimer() {\n    if (this.toast.timeout === 0) {\n      return;\n    }\n\n    setTimeout(() => this.destroy(), this.toast.timeout * FACTOR_SECONDS_TO_MS);\n  }\n}\n","import {ComponentFactoryResolver, Injectable, Injector, ApplicationRef, EmbeddedViewRef} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentInjectorService {\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private applicationRef: ApplicationRef,\n              private injector: Injector) {\n  }\n\n\n  public injectComponent(component, params = {}) {\n    const componentRef = this.createComponent(component);\n\n    Object.assign(componentRef.instance, params);\n\n    this.applicationRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n    document.body.appendChild(domElem);\n  }\n\n  private createComponent(component) {\n    return this.componentFactoryResolver\n      .resolveComponentFactory(component)\n      .create(this.injector);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {interval} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nconst FACTOR_SECONDS_TO_MS = 1000;\nconst REFRESH_RATE = 30; // ~33hz\n\n@Component({\n  selector: 'lib-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() progress: number = 0;\n  @Input() duration: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.calculateDuration();\n  }\n\n  private calculateDuration() {\n    if (!this.duration) {\n      return;\n    }\n\n    const amountOfMarblesUntilFinished = this.duration * FACTOR_SECONDS_TO_MS / REFRESH_RATE;\n    const amountOfPercentageOfEachMarble = 100 / amountOfMarblesUntilFinished;\n\n    interval(REFRESH_RATE)\n      .pipe(take(amountOfMarblesUntilFinished))\n      .subscribe(() => this.progress += amountOfPercentageOfEachMarble);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToastItService} from './toast-it.service';\nimport {ToastContainerComponent} from './toast-container/toast-container.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToastComponent} from './toast/toast.component';\nimport {ComponentInjectorService} from './general/component-injector.service';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\n\n@NgModule({\n  declarations: [\n    ToastComponent,\n    ToastContainerComponent,\n    ProgressBarComponent\n  ],\n  entryComponents: [\n    ToastContainerComponent\n  ],\n  providers: [ToastItService],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule\n  ]\n})\nexport class ToastItModule {\n  constructor(componentInjectorService: ComponentInjectorService) {\n    componentInjectorService.injectComponent(ToastContainerComponent);\n  }\n}\n\n\n\n"],"names":["FACTOR_SECONDS_TO_MS"],"mappings":"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"}