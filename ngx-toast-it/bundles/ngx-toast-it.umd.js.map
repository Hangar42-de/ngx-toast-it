{"version":3,"file":"ngx-toast-it.umd.js","sources":["ng://ngx-toast-it/lib/toast.model.ts","ng://ngx-toast-it/lib/toast-it.service.ts","ng://ngx-toast-it/lib/toast-container/toast-container.component.ts","ng://ngx-toast-it/lib/toast/toast.component.ts","ng://ngx-toast-it/lib/general/component-injector.service.ts","ng://ngx-toast-it/lib/progress-bar/progress-bar.component.ts","ng://ngx-toast-it/lib/toast-it.module.ts"],"sourcesContent":["export enum ToastType {\n  success = 'toast--success',\n  warning = 'toast--warning',\n  error = 'toast--error',\n  info = 'toast--info'\n}\n\nexport enum ToastPosition {\n  topLeft = 'top-left',\n  topRight = 'top-right',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right'\n}\n\nexport class ToastConfig {\n  position ? = ToastPosition.topRight;\n  groupingThreshold ? = 5;\n  progressBarEnabled ? = true;\n\n  constructor(config = {}) {\n    Object.assign(this, config);\n  }\n}\n\nexport class Toast {\n\n  type: ToastType;\n  heading: string;\n  subheading ? = '';\n  message: string;\n  timeout ? = 5;\n\n  constructor(toast) {\n    Object.assign(this, toast);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Toast, ToastConfig} from './toast.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastItService {\n\n  public activeToasts$ = new Subject<Toast>();\n  public activeConfig$ = new Subject<ToastConfig>();\n\n  constructor() {\n  }\n\n  public setConfig(config: ToastConfig) {\n    this.activeConfig$.next(new ToastConfig(config));\n  }\n\n  public createToast(toast: Toast) {\n    const newToast = new Toast(toast);\n    this.activeToasts$.next(newToast);\n  }\n\n  public deleteToast(id: number) {\n  }\n\n  public resetToasts() {\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ToastItService} from '../toast-it.service';\nimport {BehaviorSubject, from, Observable} from 'rxjs';\nimport {Toast, ToastConfig} from '../toast.model';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {filter, take, toArray} from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-toast-container',\n  templateUrl: './toast-container.component.html',\n  styleUrls: ['./toast-container.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('void', style({opacity: 0})),\n      transition('void <=> *', animate(250)),\n    ]),\n  ]\n})\nexport class ToastContainerComponent implements OnInit {\n\n  private activeToasts$ = new BehaviorSubject<Toast[]>([]);\n  private toastCountStream$ = new BehaviorSubject<number>(0);\n\n  public config = new ToastConfig();\n  public toasts$: Observable<Toast[]>;\n  public toastCount$ = this.toastCountStream$.pipe(filter(count => count > 0));\n\n  constructor(private toastService: ToastItService) {\n  }\n\n  ngOnInit() {\n    this.toastService.activeConfig$.subscribe(config => this.setConfig(config));\n    this.toastService.activeToasts$.subscribe(toast => this.insertNewToast(toast));\n    this.activeToasts$.subscribe(toasts => this.handleIncomingToast(toasts));\n  }\n\n  public destroy(index) {\n    const newValue = this.activeToasts$.getValue();\n    newValue.splice(index, 1);\n    this.activeToasts$.next(newValue);\n  }\n\n  private insertNewToast(toast) {\n    const newValue = this.activeToasts$.getValue();\n    newValue.push(toast);\n    this.activeToasts$.next(newValue);\n  }\n\n  private handleIncomingToast(toasts: Toast[]) {\n    const {groupingThreshold} = this.config;\n    this.toasts$ = from(toasts).pipe(take(groupingThreshold), toArray());\n    this.toastCountStream$.next(toasts.length - groupingThreshold);\n  }\n\n  private setConfig(config: ToastConfig) {\n    setTimeout(() => this.config = config, 0);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Toast, ToastConfig} from '../toast.model';\nimport {faCheckCircle} from '@fortawesome/free-solid-svg-icons/faCheckCircle';\nimport {faExclamationCircle} from '@fortawesome/free-solid-svg-icons/faExclamationCircle';\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons/faExclamationTriangle';\nimport {faInfoCircle} from '@fortawesome/free-solid-svg-icons/faInfoCircle';\n\n\nconst FACTOR_SECONDS_TO_MS = 1000;\n\n@Component({\n  selector: 'lib-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss']\n})\nexport class ToastComponent implements OnInit {\n\n  public style = {};\n  @Input() public toast: Toast;\n  @Input() public config: ToastConfig;\n  @Input() public toastCount: number;\n  @Output() public destroyEmitter = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.startTimer();\n  }\n\n  public getIconByType() {\n    switch (this.toast.type) {\n      case 'toast--success':\n        return faCheckCircle;\n      case 'toast--info':\n        return faInfoCircle;\n      case 'toast--warning':\n        return faExclamationTriangle;\n      case 'toast--error':\n        return faExclamationCircle;\n    }\n  }\n\n  public destroy = () => this.destroyEmitter.next();\n\n  private startTimer() {\n    if (this.toast.timeout === 0) {\n      return;\n    }\n\n    setTimeout(() => this.destroy(), this.toast.timeout * FACTOR_SECONDS_TO_MS);\n  }\n}\n","import {ComponentFactoryResolver, Injectable, Injector, ApplicationRef, EmbeddedViewRef} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentInjectorService {\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private applicationRef: ApplicationRef,\n              private injector: Injector) {\n  }\n\n\n  public injectComponent(component, params = {}) {\n    const componentRef = this.createComponent(component);\n\n    Object.assign(componentRef.instance, params);\n\n    this.applicationRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n    document.body.appendChild(domElem);\n  }\n\n  private createComponent(component) {\n    return this.componentFactoryResolver\n      .resolveComponentFactory(component)\n      .create(this.injector);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {interval} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nconst FACTOR_SECONDS_TO_MS = 1000;\nconst REFRESH_RATE = 30; // ~33hz\n\n@Component({\n  selector: 'lib-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() progress: number = 0;\n  @Input() duration: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.calculateDuration();\n  }\n\n  private calculateDuration() {\n    if (!this.duration) {\n      return;\n    }\n\n    const amountOfMarblesUntilFinished = this.duration * FACTOR_SECONDS_TO_MS / REFRESH_RATE;\n    const amountOfPercentageOfEachMarble = 100 / amountOfMarblesUntilFinished;\n\n    interval(REFRESH_RATE)\n      .pipe(take(amountOfMarblesUntilFinished))\n      .subscribe(() => this.progress += amountOfPercentageOfEachMarble);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToastItService} from './toast-it.service';\nimport {ToastContainerComponent} from './toast-container/toast-container.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToastComponent} from './toast/toast.component';\nimport {ComponentInjectorService} from './general/component-injector.service';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\n\n@NgModule({\n  declarations: [\n    ToastComponent,\n    ToastContainerComponent,\n    ProgressBarComponent\n  ],\n  entryComponents: [\n    ToastContainerComponent\n  ],\n  providers: [ToastItService],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule\n  ]\n})\nexport class ToastItModule {\n  constructor(componentInjectorService: ComponentInjectorService) {\n    componentInjectorService.injectComponent(ToastContainerComponent);\n  }\n}\n\n\n\n"],"names":["Subject","Injectable","BehaviorSubject","filter","from","take","toArray","Component","trigger","state","style","transition","animate","EventEmitter","faCheckCircle","faInfoCircle","faExclamationTriangle","faExclamationCircle","Input","Output","ComponentFactoryResolver","ApplicationRef","Injector","FACTOR_SECONDS_TO_MS","interval","NgModule","CommonModule","BrowserAnimationsModule","FontAwesomeModule"],"mappings":";;;;;;;;;;;;QACE,SAAU,gBAAgB;QAC1B,SAAU,gBAAgB;QAC1B,OAAQ,cAAc;QACtB,MAAO,aAAa;;;;QAIpB,SAAU,UAAU;QACpB,UAAW,WAAW;QACtB,YAAa,aAAa;QAC1B,aAAc,cAAc;;;QAQ5B,qBAAY,MAAW;YAAX,uBAAA,EAAA,WAAW;YAJvB,aAAQ,GAAK,aAAa,CAAC,QAAQ,CAAC;YACpC,sBAAiB,GAAK,CAAC,CAAC;YACxB,uBAAkB,GAAK,IAAI,CAAC;YAG1B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC7B;QACH,kBAAC;KAAA,IAAA;;;QAPC,+BAAoC;;QACpC,wCAAwB;;QACxB,yCAA4B;;AAO9B;QAQE,eAAY,KAAK;YAJjB,eAAU,GAAK,EAAE,CAAC;YAElB,YAAO,GAAK,CAAC,CAAC;YAGZ,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC5B;QACH,YAAC;KAAA,IAAA;;;QATC,qBAAgB;;QAChB,wBAAgB;;QAChB,2BAAkB;;QAClB,wBAAgB;;QAChB,wBAAc;;;;;;;AC9BhB;QAaE;YAHO,kBAAa,GAAG,IAAIA,YAAO,EAAS,CAAC;YACrC,kBAAa,GAAG,IAAIA,YAAO,EAAe,CAAC;SAGjD;;;;;QAEM,kCAAS;;;;QAAhB,UAAiB,MAAmB;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;SAClD;;;;;QAEM,oCAAW;;;;QAAlB,UAAmB,KAAY;;gBACvB,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;;;;;QAEM,oCAAW;;;;QAAlB,UAAmB,EAAU;SAC5B;;;;QAEM,oCAAW;;;QAAlB;SACC;;oBAxBFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;6BAPD;KAKA,IAyBC;;;QApBC,uCAA4C;;QAC5C,uCAAkD;;;;;;;ACXpD;QA2BE,iCAAoB,YAA4B;YAA5B,iBAAY,GAAZ,YAAY,CAAgB;YAPxC,kBAAa,GAAG,IAAIC,oBAAe,CAAU,EAAE,CAAC,CAAC;YACjD,sBAAiB,GAAG,IAAIA,oBAAe,CAAS,CAAC,CAAC,CAAC;YAEpD,WAAM,GAAG,IAAI,WAAW,EAAE,CAAC;YAE3B,gBAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAACC,gBAAM;;;;YAAC,UAAA,KAAK,IAAI,OAAA,KAAK,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;SAG5E;;;;QAED,0CAAQ;;;QAAR;YAAA,iBAIC;YAHC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS;;;;YAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAA,EAAC,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS;;;;YAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;YAC/E,IAAI,CAAC,aAAa,CAAC,SAAS;;;;YAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAA,EAAC,CAAC;SAC1E;;;;;QAEM,yCAAO;;;;QAAd,UAAe,KAAK;;gBACZ,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC9C,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;;;;;;QAEO,gDAAc;;;;;QAAtB,UAAuB,KAAK;;gBACpB,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC9C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;;;;;;QAEO,qDAAmB;;;;;QAA3B,UAA4B,MAAe;YAClC,IAAA,iDAAiB;YACxB,IAAI,CAAC,OAAO,GAAGC,SAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAACC,cAAI,CAAC,iBAAiB,CAAC,EAAEC,iBAAO,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC;SAChE;;;;;;QAEO,2CAAS;;;;;QAAjB,UAAkB,MAAmB;YAArC,iBAEC;YADC,UAAU;;;YAAC,cAAM,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,GAAA,GAAE,CAAC,CAAC,CAAC;SAC3C;;oBAjDFC,cAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,yaAA+C;wBAE/C,UAAU,EAAE;4BACVC,kBAAO,CAAC,WAAW,EAAE;gCACnBC,gBAAK,CAAC,MAAM,EAAEC,gBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;gCAClCC,qBAAU,CAAC,YAAY,EAAEC,kBAAO,CAAC,GAAG,CAAC,CAAC;6BACvC,CAAC;yBACH;;qBACF;;;;oBAhBO,cAAc;;QAyDtB,8BAAC;KAnDD,IAmDC;;;;;;QAtCC,gDAAyD;;;;;QACzD,oDAA2D;;QAE3D,yCAAkC;;QAClC,0CAAoC;;QACpC,8CAA6E;;;;;QAEjE,+CAAoC;;;;;;;IC3BlD;QAQM,oBAAoB,GAAG,IAAI;AAEjC;QAaE;YAAA,iBACC;YAPM,UAAK,GAAG,EAAE,CAAC;YAID,mBAAc,GAAG,IAAIC,iBAAY,EAAE,CAAC;YAsB9C,YAAO;;;YAAG,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAA,EAAC;SAnBjD;;;;QAED,iCAAQ;;;QAAR;YACE,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;;;;QAEM,sCAAa;;;QAApB;YACE,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,KAAK,gBAAgB;oBACnB,OAAOC,2BAAa,CAAC;gBACvB,KAAK,aAAa;oBAChB,OAAOC,yBAAY,CAAC;gBACtB,KAAK,gBAAgB;oBACnB,OAAOC,2CAAqB,CAAC;gBAC/B,KAAK,cAAc;oBACjB,OAAOC,uCAAmB,CAAC;aAC9B;SACF;;;;;QAIO,mCAAU;;;;QAAlB;YAAA,iBAMC;YALC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;gBAC5B,OAAO;aACR;YAED,UAAU;;;YAAC,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,GAAA,GAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,oBAAoB,CAAC,CAAC;SAC7E;;oBAzCFV,cAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,okBAAqC;;qBAEtC;;;;;4BAIEW,UAAK;6BACLA,UAAK;iCACLA,UAAK;qCACLC,WAAM;;QA+BT,qBAAC;KA1CD,IA0CC;;;QAnCC,+BAAkB;;QAClB,+BAA6B;;QAC7B,gCAAoC;;QACpC,oCAAmC;;QACnC,wCAAqD;;QAsBrD,iCAAkD;;;;;;;AC3CpD;QAOE,kCAAoB,wBAAkD,EAClD,cAA8B,EAC9B,QAAkB;YAFlB,6BAAwB,GAAxB,wBAAwB,CAA0B;YAClD,mBAAc,GAAd,cAAc,CAAgB;YAC9B,aAAQ,GAAR,QAAQ,CAAU;SACrC;;;;;;QAGM,kDAAe;;;;;QAAtB,UAAuB,SAAS,EAAE,MAAW;YAAX,uBAAA,EAAA,WAAW;;gBACrC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAEpD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE7C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;gBAEhD,OAAO,sBAAG,oBAAC,YAAY,CAAC,QAAQ,IAA0B,SAAS,CAAC,CAAC,CAAC,EAAe;YAE3F,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACpC;;;;;;QAEO,kDAAe;;;;;QAAvB,UAAwB,SAAS;YAC/B,OAAO,IAAI,CAAC,wBAAwB;iBACjC,uBAAuB,CAAC,SAAS,CAAC;iBAClC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1B;;oBA3BFlB,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBAJOmB,6BAAwB;oBAAwBC,mBAAc;oBAAxBC,aAAQ;;;uCAAtD;KAEA,IA4BC;;;;;;QAvBa,4DAA0D;;;;;QAC1D,kDAAsC;;;;;QACtC,4CAA0B;;;;;;;ICTxC;QAIMC,sBAAoB,GAAG,IAAI;;QAC3B,YAAY,GAAG,EAAE;;AAEvB;QAUE;YAHS,aAAQ,GAAW,CAAC,CAAC;SAI7B;;;;QAED,uCAAQ;;;QAAR;YACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;;;;;QAEO,gDAAiB;;;;QAAzB;YAAA,iBAWC;YAVC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;;gBAEK,4BAA4B,GAAG,IAAI,CAAC,QAAQ,GAAGA,sBAAoB,GAAG,YAAY;;gBAClF,8BAA8B,GAAG,GAAG,GAAG,4BAA4B;YAEzEC,aAAQ,CAAC,YAAY,CAAC;iBACnB,IAAI,CAACnB,cAAI,CAAC,4BAA4B,CAAC,CAAC;iBACxC,SAAS;;;YAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,IAAI,8BAA8B,GAAA,EAAC,CAAC;SACrE;;oBA5BFE,cAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,+EAA4C;;qBAE7C;;;;;+BAGEW,UAAK;+BACLA,UAAK;;QAqBR,2BAAC;KA7BD,IA6BC;;;QAtBC,wCAA8B;;QAC9B,wCAA0B;;;;;;;ACf5B;QA4BE,uBAAY,wBAAkD;YAC5D,wBAAwB,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;SACnE;;oBAnBFO,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,cAAc;4BACd,uBAAuB;4BACvB,oBAAoB;yBACrB;wBACD,eAAe,EAAE;4BACf,uBAAuB;yBACxB;wBACD,SAAS,EAAE,CAAC,cAAc,CAAC;wBAC3B,OAAO,EAAE;4BACPC,mBAAY;4BACZC,oCAAuB;4BACvBC,oCAAiB;yBAClB;qBACF;;;;oBApBO,wBAAwB;;QAyBhC,oBAAC;KApBD;;;;;;;;;;;;;;;;;;;;;"}